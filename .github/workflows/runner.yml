name: Feed → Discord (multi-webhook)

on:
  schedule:
    - cron: "*/10 * * * *"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [0, 1, 2, 3]   # まずは [0] にして単発運転→安定後に [0,1,2,3] に戻すのもOK
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0      # ← rebase/pull が使えるように履歴を取得（重要）

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: pip install feedparser pyyaml requests

      - name: Run fetcher (matrix shard)
        env:
          SHARD_INDEX: ${{ matrix.shard }}
          SHARD_TOTAL: 4
          DISCORD_WEBHOOK:      ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_WEBHOOK_NEWS: ${{ secrets.DISCORD_WEBHOOK_NEWS }}
          DISCORD_WEBHOOK_YT:   ${{ secrets.DISCORD_WEBHOOK_YT }}
          DISCORD_WEBHOOK_X:    ${{ secrets.DISCORD_WEBHOOK_X }}
          DISCORD_WEBHOOK_XKW:  ${{ secrets.DISCORD_WEBHOOK_XKW }}
          NITTER_BASES:         ${{ secrets.NITTER_BASES }}     # ← 追加
          RSSHUB_BASES:         ${{ secrets.RSSHUB_BASES }}     # ← 追加（任意）
        run: python fetch_and_post.py

      - name: (TEMP) Probe Nitter mirrors from runner
        run: |
          set -e
          list="
          https://nitter.net
          https://nitter.poast.org
          https://nitter.privacydev.net
          https://nitter.fdn.fr
          https://nitter.ca
          https://nitter.skrep.in
          https://nitter.weiler.rocks
          https://nitter.kylrth.com
          https://nitter.uni-sonia.com
          https://nitter.eu.projectsegfau.lt
          "
          for b in $list; do
            echo "=== $b"
            curl -sS -I --max-time 8 "$b/SuguruKun_ai/rss" || true
            echo
          done


      - name: Save state (commit back safely)
        if: always()
        run: |
          set -e
          git config user.name "actions-bot"
          git config user.email "actions@users.noreply.github.com"

          BRANCH="${{ github.ref_name }}"
          git fetch origin "$BRANCH"
          git checkout "$BRANCH"
          git pull --rebase origin "$BRANCH" || true

          git add state.json || true
          git commit -m "update state [skip ci]" || echo "no changes"

          n=0
          until [ $n -ge 5 ]
          do
            git pull --rebase origin "$BRANCH" || true
            if git push origin HEAD:"$BRANCH"; then
              echo "push succeeded"
              break
            fi
            n=$((n+1))
            echo "push retry $n/5..."
            sleep 2
          done
