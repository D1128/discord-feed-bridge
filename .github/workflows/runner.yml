name: Feed → Discord (multi-webhook)

on:
  schedule:
    - cron: "*/10 * * * *"   # （UTC基準。必要なら後で */15 に）
  workflow_dispatch: {}

permissions:
  contents: write

# ★ 並走防止（任意だが推奨）
concurrency:
  group: feed-to-discord
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shard: [0, 1, 2, 3]   # テスト時は [0]、安定後に戻すでOK
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          # cache: 'pip'   # （任意）依存のキャッシュが欲しければ有効化

      - name: Install deps
        run: pip install feedparser pyyaml requests

      - name: Run fetcher (matrix shard)
        env:
          SHARD_INDEX: ${{ matrix.shard }}
          SHARD_TOTAL: 4
          DISCORD_WEBHOOK:      ${{ secrets.DISCORD_WEBHOOK }}
          DISCORD_WEBHOOK_NEWS: ${{ secrets.DISCORD_WEBHOOK_NEWS }}
          DISCORD_WEBHOOK_YT:   ${{ secrets.DISCORD_WEBHOOK_YT }}
          DISCORD_WEBHOOK_X:    ${{ secrets.DISCORD_WEBHOOK_X }}
          DISCORD_WEBHOOK_XKW:  ${{ secrets.DISCORD_WEBHOOK_XKW }}
          NITTER_BASES:         ${{ secrets.NITTER_BASES }}     # 例: https://nitter.net
          RSSHUB_BASES:         ${{ secrets.RSSHUB_BASES }}     # （無ければ空でOK）
          # ★ 429回避の間引き（まず 2.5秒。状況に応じて 4〜8秒へ）
          NITTER_DELAY:         "2.5"
        run: python fetch_and_post.py

      - name: Save state (commit back safely)
        if: always()
        run: |
          set -e
          git config user.name "actions-bot"
          git config user.email "actions@users.noreply.github.com"

          BRANCH="${{ github.ref_name }}"
          git fetch origin "$BRANCH"
          git checkout "$BRANCH"
          git pull --rebase origin "$BRANCH" || true

          git add state.json || true
          git commit -m "update state [skip ci]" || echo "no changes"

          n=0
          until [ $n -ge 5 ]
          do
            git pull --rebase origin "$BRANCH" || true
            if git push origin HEAD:"$BRANCH"; then
              echo "push succeeded"
              break
            fi
            n=$((n+1))
            echo "push retry $n/5..."
            sleep 2
          done
